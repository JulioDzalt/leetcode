'''
238. Product of Array Except Self

Given an integer array nums,
return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

 

Example 1:

Input: nums = [1,2,3,4]
Output: [24,12,8,6]
Example 2:

Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]
'''
# O(N) 
class Solution:
    def productExceptSelf(self, nums: list[int]) -> int:
        
        prefix = 1
        sufix = 1
        lst_prefix = list()
        lst_sufix = list()
        
        for n in nums:
            lst_prefix.append(prefix)
            prefix*=n
        
        for n in nums[::-1]:
            lst_sufix.append(sufix)
            sufix*=n
        lst_sufix = lst_sufix[::-1]

        r = []
        for i in range(len(lst_prefix)):
            r.append(lst_prefix[i]*lst_sufix[i])

        return r
            
    print(productExceptSelf(None, [1,2,3,4]))


